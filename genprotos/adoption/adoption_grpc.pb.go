// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.31.0
// source: adoption.proto

package adoption

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AdoptionService_CreateAdoptionApplication_FullMethodName       = "/adoption.AdoptionService/CreateAdoptionApplication"
	AdoptionService_GetAdoptionApplication_FullMethodName          = "/adoption.AdoptionService/GetAdoptionApplication"
	AdoptionService_UpdateAdoptionApplicationStatus_FullMethodName = "/adoption.AdoptionService/UpdateAdoptionApplicationStatus"
	AdoptionService_ListUserAdoptionApplications_FullMethodName    = "/adoption.AdoptionService/ListUserAdoptionApplications"
)

// AdoptionServiceClient is the client API for AdoptionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AdoptionServiceClient interface {
	CreateAdoptionApplication(ctx context.Context, in *CreateAdoptionApplicationRequest, opts ...grpc.CallOption) (*AdoptionApplicationResponse, error)
	GetAdoptionApplication(ctx context.Context, in *GetAdoptionApplicationRequest, opts ...grpc.CallOption) (*AdoptionApplicationResponse, error)
	UpdateAdoptionApplicationStatus(ctx context.Context, in *UpdateAdoptionApplicationStatusRequest, opts ...grpc.CallOption) (*AdoptionApplicationResponse, error)
	ListUserAdoptionApplications(ctx context.Context, in *ListUserAdoptionApplicationsRequest, opts ...grpc.CallOption) (*ListAdoptionApplicationsResponse, error)
}

type adoptionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdoptionServiceClient(cc grpc.ClientConnInterface) AdoptionServiceClient {
	return &adoptionServiceClient{cc}
}

func (c *adoptionServiceClient) CreateAdoptionApplication(ctx context.Context, in *CreateAdoptionApplicationRequest, opts ...grpc.CallOption) (*AdoptionApplicationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AdoptionApplicationResponse)
	err := c.cc.Invoke(ctx, AdoptionService_CreateAdoptionApplication_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adoptionServiceClient) GetAdoptionApplication(ctx context.Context, in *GetAdoptionApplicationRequest, opts ...grpc.CallOption) (*AdoptionApplicationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AdoptionApplicationResponse)
	err := c.cc.Invoke(ctx, AdoptionService_GetAdoptionApplication_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adoptionServiceClient) UpdateAdoptionApplicationStatus(ctx context.Context, in *UpdateAdoptionApplicationStatusRequest, opts ...grpc.CallOption) (*AdoptionApplicationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AdoptionApplicationResponse)
	err := c.cc.Invoke(ctx, AdoptionService_UpdateAdoptionApplicationStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adoptionServiceClient) ListUserAdoptionApplications(ctx context.Context, in *ListUserAdoptionApplicationsRequest, opts ...grpc.CallOption) (*ListAdoptionApplicationsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListAdoptionApplicationsResponse)
	err := c.cc.Invoke(ctx, AdoptionService_ListUserAdoptionApplications_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdoptionServiceServer is the server API for AdoptionService service.
// All implementations must embed UnimplementedAdoptionServiceServer
// for forward compatibility.
type AdoptionServiceServer interface {
	CreateAdoptionApplication(context.Context, *CreateAdoptionApplicationRequest) (*AdoptionApplicationResponse, error)
	GetAdoptionApplication(context.Context, *GetAdoptionApplicationRequest) (*AdoptionApplicationResponse, error)
	UpdateAdoptionApplicationStatus(context.Context, *UpdateAdoptionApplicationStatusRequest) (*AdoptionApplicationResponse, error)
	ListUserAdoptionApplications(context.Context, *ListUserAdoptionApplicationsRequest) (*ListAdoptionApplicationsResponse, error)
	mustEmbedUnimplementedAdoptionServiceServer()
}

// UnimplementedAdoptionServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAdoptionServiceServer struct{}

func (UnimplementedAdoptionServiceServer) CreateAdoptionApplication(context.Context, *CreateAdoptionApplicationRequest) (*AdoptionApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdoptionApplication not implemented")
}
func (UnimplementedAdoptionServiceServer) GetAdoptionApplication(context.Context, *GetAdoptionApplicationRequest) (*AdoptionApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAdoptionApplication not implemented")
}
func (UnimplementedAdoptionServiceServer) UpdateAdoptionApplicationStatus(context.Context, *UpdateAdoptionApplicationStatusRequest) (*AdoptionApplicationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAdoptionApplicationStatus not implemented")
}
func (UnimplementedAdoptionServiceServer) ListUserAdoptionApplications(context.Context, *ListUserAdoptionApplicationsRequest) (*ListAdoptionApplicationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUserAdoptionApplications not implemented")
}
func (UnimplementedAdoptionServiceServer) mustEmbedUnimplementedAdoptionServiceServer() {}
func (UnimplementedAdoptionServiceServer) testEmbeddedByValue()                         {}

// UnsafeAdoptionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdoptionServiceServer will
// result in compilation errors.
type UnsafeAdoptionServiceServer interface {
	mustEmbedUnimplementedAdoptionServiceServer()
}

func RegisterAdoptionServiceServer(s grpc.ServiceRegistrar, srv AdoptionServiceServer) {
	// If the following call pancis, it indicates UnimplementedAdoptionServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AdoptionService_ServiceDesc, srv)
}

func _AdoptionService_CreateAdoptionApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAdoptionApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdoptionServiceServer).CreateAdoptionApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdoptionService_CreateAdoptionApplication_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdoptionServiceServer).CreateAdoptionApplication(ctx, req.(*CreateAdoptionApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdoptionService_GetAdoptionApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAdoptionApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdoptionServiceServer).GetAdoptionApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdoptionService_GetAdoptionApplication_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdoptionServiceServer).GetAdoptionApplication(ctx, req.(*GetAdoptionApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdoptionService_UpdateAdoptionApplicationStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAdoptionApplicationStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdoptionServiceServer).UpdateAdoptionApplicationStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdoptionService_UpdateAdoptionApplicationStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdoptionServiceServer).UpdateAdoptionApplicationStatus(ctx, req.(*UpdateAdoptionApplicationStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdoptionService_ListUserAdoptionApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserAdoptionApplicationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdoptionServiceServer).ListUserAdoptionApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdoptionService_ListUserAdoptionApplications_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdoptionServiceServer).ListUserAdoptionApplications(ctx, req.(*ListUserAdoptionApplicationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AdoptionService_ServiceDesc is the grpc.ServiceDesc for AdoptionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdoptionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "adoption.AdoptionService",
	HandlerType: (*AdoptionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAdoptionApplication",
			Handler:    _AdoptionService_CreateAdoptionApplication_Handler,
		},
		{
			MethodName: "GetAdoptionApplication",
			Handler:    _AdoptionService_GetAdoptionApplication_Handler,
		},
		{
			MethodName: "UpdateAdoptionApplicationStatus",
			Handler:    _AdoptionService_UpdateAdoptionApplicationStatus_Handler,
		},
		{
			MethodName: "ListUserAdoptionApplications",
			Handler:    _AdoptionService_ListUserAdoptionApplications_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "adoption.proto",
}
